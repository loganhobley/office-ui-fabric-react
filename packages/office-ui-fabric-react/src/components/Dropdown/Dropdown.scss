@import '../../common/common';

// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.

//
// Office UI Fabric
// --------------------------------------------------
// Dropdown styles

$Dropdown-selectedItem-bg: $ms-color-neutralQuaternaryAlt;
$Dropdown-selectedItem-hover-bg: $ms-color-neutralLighter;
$DropDown-height: 32px;
$DropDown-item-height: 36px;

// Mixin for high contrast mode link states
@mixin highContrastListItemState {
  @media screen and (-ms-high-contrast: active) {
    background-color: $ms-color-contrastBlackSelected;
    border-color: $ms-color-contrastBlackSelected;
    color: $ms-color-black;

    &:focus {
      border-color: $ms-color-black;
    }
  }

  @media screen and (-ms-high-contrast: black-on-white) {
    background-color: $ms-color-contrastWhiteSelected;
    border-color: $ms-color-contrastWhiteSelected;
    color: $ms-color-white;
  }
}

.root {
  @include ms-u-normalize;
  @include ms-font-m;
  color: $ms-color-neutralPrimary;

  margin-bottom: 10px;
  position: relative;
  outline: 0;
  user-select: none;

  &:hover,
  &:focus,
  &:active {
    .title,
    .caretDown {
      color: $ms-color-black;

      @media screen and (-ms-high-contrast: active) {
        color: $ms-color-contrastBlackSelected;
      }

      @media screen and (-ms-high-contrast: black-on-white) {
        color: $ms-color-contrastWhiteSelected;
      }
    }
  }

  &:hover,
  &:active {
    .title {
      border-color: $ms-color-themePrimary;

      @media screen and (-ms-high-contrast: active) {
        border-color: $ms-color-contrastBlackSelected;
      }

      @media screen and (-ms-high-contrast: black-on-white) {
        border-color: $ms-color-contrastWhiteSelected;
      }
    }
  }

  &:focus {
    .title {
      border-color: $ms-color-themePrimary;

      @media screen and (-ms-high-contrast: active) {
        border-color: $ms-color-contrastBlackSelected;
      }

      @media screen and (-ms-high-contrast: black-on-white) {
        border-color: $ms-color-contrastWhiteSelected;
      }
    }
  }

  :global(.ms-Label) {
    display: inline-block;
    margin-bottom: 8px;
  }
}

//== State: A disabled dropdown
.root.isDisabled {
  .title {
    background-color: $ms-color-neutralLighter;
    border-color: $ms-color-neutralLighter;
    color: $ms-color-neutralTertiary;
    cursor: default;

    @media screen and (-ms-high-contrast: active) {
      border-color: $ms-color-contrastBlackDisabled;
      color: $ms-color-contrastBlackDisabled;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      border-color: $ms-color-contrastWhiteDisabled;
      color: $ms-color-contrastWhiteDisabled;
    }
  }

  .caretDown {
    color: $ms-color-neutralTertiary;

    @media screen and (-ms-high-contrast: active) {
      color: $ms-color-contrastBlackDisabled;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      color: $ms-color-contrastWhiteDisabled;
    }
  }
}

.caretDown {
  color: $ms-color-neutralDark;
  font-size: $ms-icon-size-s;
  position: absolute;
  top: 0px;
  @include right(12px);
  pointer-events: none;
  line-height: $DropDown-height;
}

// Style the new, replacement component
.title {
  @include ms-u-normalize;
  background: $ms-color-white;
  border: 1px solid $ms-color-neutralTertiaryAlt;
  cursor: pointer;
  display: block;
  height: $DropDown-height;
  line-height: $DropDown-height - 2px; // height minus the border
  @include padding(0, $DropDown-height, 0, 12px);
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// Container for the dropdown items, displayed as a panel on small screens.
.items {
  @include ms-u-normalize;
  @include drop-shadow;
  background-color: $ms-color-white;
  list-style-type: none;
  width: 100%;
  top: auto;
  right: auto;
  bottom: auto;
  left: auto;
  max-width: 100%;
  box-shadow: 0 0px 15px -5px rgba(0, 0, 0, 0.4);
  border: 1px solid $ms-color-neutralLight;
  user-select: none;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border: none;
  }

  @media screen and (-ms-high-contrast: active) {
    border: 1px solid $ms-color-white;
  }

  @media screen and (-ms-high-contrast: black-on-white) {
    border: 1px solid $ms-color-black;
  }
}

.item {
  box-sizing: border-box;
  cursor: pointer;
  display: block;
  min-height: $DropDown-item-height;
  line-height: 20px;
  padding: 6px 12px;
  position: relative;
  border: 1px solid transparent;
  word-wrap: break-word;

  @media screen and (-ms-high-contrast: active) {
    border-color: $ms-color-black;
  }

  @media screen and (-ms-high-contrast: black-on-white) {
    border-color: $ms-color-white;
  }

  &:hover {
    background-color: $Dropdown-selectedItem-hover-bg;
    color: $ms-color-black;

    @include highContrastListItemState;
  }

  @include focus-border();

  &:focus {
    background-color: $ms-color-neutralLighter;
  }

  &:active {
    background-color: $Dropdown-selectedItem-hover-bg;
    color: $ms-color-black;
  }

  &.isDisabled {
    background: $ms-color-white;
    color: $ms-color-neutralTertiary;
    cursor: default;
  }
}

//== State: A selected dropdown item
.item.isSelected {
  background-color: $Dropdown-selectedItem-bg;
  color: $ms-color-black;

  &:hover {
    background-color: $Dropdown-selectedItem-bg;
  }

  @include focus-border();

  @include highContrastListItemState;
}
